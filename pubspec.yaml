name: projects
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.5.3

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_slidable: ^3.1.1
  shared_preferences: ^2.2.0
  http: ^1.1.0
  flutter_localizations:
    sdk: flutter
  flutter_svg: ^2.0.9
  flutter_native_splash: ^2.4.4
  intl: ^0.19.0
  
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8


dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^4.0.0
  # flutter_launcher_icons: "^0.13.1"


# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  assets:
    - assets/images/hugeicons_border-none-02.svg #위치를 못찾을때 아이콘
    - assets/images/charm_menu-meatball.svg #  * * * 아이콘
    - assets/images/iconamoon_profile-fill.svg # 사람아이콘
    - assets/images/material-symbols_home-rounded.svg # 집아이콘
    - assets/images/charm_menu-mini.svg # * * * 미니버전
    - assets/images/bxs_trash.svg #쓰레기통
    - assets/images/uil_calender.svg #캘린더
    - assets/images/basil_stack-solid.svg #스택 아이콘
    - assets/images/sigo2.png #시고 아이콘
    - assets/images/page.png
    - assets\images\sigo1.png

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Inter
      fonts:
        - asset: assets/fonts/Pretendard-Bold.otf
          weight: 700
        - asset: assets/fonts/Pretendard-ExtraBold.otf
          weight: 800
        - asset: assets/fonts/Pretendard-ExtraLight.otf
          weight: 200
        - asset: assets/fonts/Pretendard-Light.otf
          weight: 300
        - asset: assets/fonts/Pretendard-Medium.otf
          weight: 500
        - asset: assets/fonts/Pretendard-Regular.otf
          weight: 400
        - asset: assets/fonts/Pretendard-SemiBold.otf
          weight: 600
        - asset: assets/fonts/Pretendard-Thin.otf
          weight: 100
    # - family: Schyler
      # fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
       # 웹 환경에서도 가운데 맞춤

# flutter_launcher_icons:
#   android: "launcher_icon"
#   ios: "AppIcon"
#   image_path_ios: "assets/images/sigo1.png"
#   image_path_android: "assets/images/sigo1.png"
#   adaptive_icon_background: "#FFFFFF"
#   adaptive_icon_foreground: "assets/images/sigo1.png"
#   remove_alpha_ios: true
#   ios_dynamic: true 


